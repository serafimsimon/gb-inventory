version: '3.8'
services:

  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./apigateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  web:
    container_name: web
    build:
      context: .
      dockerfile: web/dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./web:/app
      - ./app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - auth-service
    networks:
      - gb-inventory-net

  postgres:
    container_name: postgresql-db
    image: postgres:15
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: postgresql-db-project
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123

    volumes:
        - ./2. Init Database:/docker-entrypoint-initdb.d
        - .:/var/lib/postgresql/data2
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - gb-inventory-net

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.3
    environment:
      PGADMIN_DEFAULT_EMAIL: "root@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "123"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/data/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - gb-inventory-net

  auth-service:
    container_name: auth
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  discovery:
     container_name: eureka
     build:
       context: .
       dockerfile: ./discovery/Dockerfile
     depends_on:
       - postgres
     networks:
       - gb-inventory-net
     restart: always



  department-service:
    container_name: department
    build:
      context: .
      dockerfile: ./department/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  itactive-service:
    container_name: itactive
    build:
      context: .
      dockerfile: ./itactive/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  job-service:
    container_name: job
    build:
      context: .
      dockerfile: ./job/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  order-service:
    container_name: order
    build:
      context: .
      dockerfile: ./order/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


  user-service:
    container_name: user
    build:
      context: .
      dockerfile: ./user/Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    networks:
      - gb-inventory-net
    restart: always


volumes:
  pgadmin-data:
  postgresql-db-data:

networks:
  gb-inventory-net:
    driver: bridge



